load('../../Q2/matlab/data.mat');


Y_test = [];
i = 0;
demand_sum = 0;
for row = data
    
    i = i + 1;
    if i == 13
        Y_test = [
            Y_test
            demand_sum
        ];
        i = 1;
        demand_sum = 0;
    end

    row = row';
    for x = row
        if ~isnan(x)
            demand_sum = demand_sum + x;
        end
    end

end
Y_test = [
    Y_test
    demand_sum
];
Y_test = Y_test ./ 10000;

ACity_population = [
    911.70
    917.5
    921.5
];

Y_test = Y_test ./ ACity_population;

ARIMA_predict = [
    0.0007987788730760199
    0.003395475646867655
    0.001093901023247034
    0.0003560391380996297
    0.001219384936526198
    0.001713661891186279
    0.002393339064079831
    0.002071174048498913
    0.001900785756078736
    0.002123388166785364
    0.001801326510067024
    0.001741677531295657
    0.00129097324001022
    0.002103600844478102
    0.00266739952294458
    0.002089460768650142
    0.001759031002610022
    0.001759047659572821
    0.001789817837103607
    0.001827395723610217
    0.001792882246854233
    0.002628864215711885
    0.004128059892867875
    0.004814935375759518
    0.006001293770381999
    0.007193258178654234
    0.00806838200683228
    0.009088280048849228
    0.01010068898673136
    0.01110321040876877
    0.01210097184315064
    0.01310000069858313
    0.01404062607421279
    0.01491198711220354
    0.01580130346459605
    0.01665070076643466
    0.01749348163285985
    0.01834996020649707
    0.01920513420221793
    0.02006300900663971
];

ARIMA_predict = [
    zeros(44 - length(ARIMA_predict), 1)
    ARIMA_predict
];

RE = [
    0.0008133702610088548
    -0.0004151820142004965
    0.001280105876725788
    -0.001928081857461387
    8.665944744898084e-06
    0.0007688541516338644
    0.0001647268310907325
    0.0001544384484636592
    -0.0004425349586939546
    -9.568851572161692e-05
    0.000146154974248973
    -0.0001468128239929963
    4.332000002614158e-05
    -8.01740575850819e-05
    0.0004641623507452263
    8.098442827312355e-05
    -0.0005105266824064831
    -7.514710296386895e-05
    0.0001495318061092084
    5.611213683968064e-05
    2.366786495896085e-05
    -2.319151217549426e-05
    0.0004142151871613334
    0.0005010380078921536
    -0.000212387677713606
    0.0001892626502748908
    7.319597339138298e-05
    -0.0001554376345360577
];

X = ((31 - length(RE)) : 30)';
length(X)
length(RE)

lssvm_type = 'function estimation';
lssvm_kernel = 'RBF_kernel';

lssvm_model = initlssvm(X, RE, lssvm_type, [], [], lssvm_kernel, 'o');

%optimize
costfun = 'crossvalidatelssvm';
costfun_args = {10, 'mse'};
optfun = 'gridsearch';
lssvm_model = tunelssvm(lssvm_model, optfun, costfun, costfun_args);

lssvm_model = trainlssvm(lssvm_model);

%LSSVM predict
Xpredict = (1 : 44)';
RE_predict = simlssvm(lssvm_model, Xpredict);

ARIMA_LSSVM = ARIMA_predict + RE_predict;

X_test = (38.75 : 1 : 40.75);

plot(Xpredict, ARIMA_predict, 'k-x', Xpredict, ARIMA_LSSVM, 'b-o', X_test, Y_test, 'r-*');
legend('ARIMA', 'ARIMA-LSSVM', 'Original');